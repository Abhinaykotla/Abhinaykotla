/* ==========================================
   HERO SECTION
   ========================================== */
.hero {
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    background: linear-gradient(135deg, var(--bg-primary) 0%, var(--bg-secondary) 100%);
    overflow: hidden;
}

.hero::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grid" width="10" height="10" patternUnits="userSpaceOnUse"><path d="M 10 0 L 0 0 0 10" fill="none" stroke="%23ffffff" stroke-width="0.1" opacity="0.1"/></pattern></defs><rect width="100" height="100" fill="url(%23grid)"/></svg>');
    opacity: 0.3;
}

.hero-content {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 var(--space-md);
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: var(--space-3xl);
    align-items: center;
    position: relative;
    z-index: 1;
}

.hero-text {
    animation: slideInLeft 1s ease;
}

.hero-title {
    font-size: var(--font-size-5xl);
    font-weight: 600;
    margin-bottom: var(--space-lg);
    line-height: 1.2;
}

.typing-text {
    background: var(--gradient-secondary);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
}

.hero-subtitle {
    font-size: var(--font-size-xl);
    color: var(--text-secondary);
    margin-bottom: var(--space-2xl);
    line-height: 1.5;
}

.hero-buttons {
    display: flex;
    gap: var(--space-lg);
    flex-wrap: wrap;
}

.hero-visual {
    display: flex;
    align-items: center;
    justify-content: center;
    animation: slideInRight 1s ease;
}

/* === Neural Network Visualization (4-layer) === */
.neural-network {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    width: 340px;
    height: 300px;
    position: relative;
}

.layer {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    flex: 1;
    height: 100%;
    position: relative;
    z-index: 2;
}

.node {
    width: 22px;
    height: 22px;
    margin: 18px 0;
    background: var(--accent-primary);
    border-radius: 50%;
    box-shadow: 0 0 16px var(--accent-primary), 0 0 2px #fff;
    animation: pulse 3s infinite;
    position: relative;
    z-index: 2;
}

/* Active node: brighter glow */
.node.active {
    background: var(--accent-primary);
    box-shadow: 0 0 40px 10px var(--accent-primary), 0 0 8px #fff;
    filter: brightness(1.5);
    transition: box-shadow 0.2s, filter 0.2s;
    animation: pulse 3s infinite;
}

/* Inactive node: dimmer */
.node.inactive {
    background: var(--accent-primary);
    box-shadow: 0 0 6px 0px var(--accent-primary), 0 0 1px #fff;
    filter: brightness(0.5) grayscale(0.5);
    opacity: 0.5;
    transition: box-shadow 0.2s, filter 0.2s, opacity 0.2s;
}

/* Animate node pulse */
@keyframes pulse {

    0%,
    100% {
        box-shadow: 0 0 16px var(--accent-primary), 0 0 2px #fff;
    }

    50% {
        box-shadow: 0 0 32px var(--accent-primary), 0 0 8px #fff;
    }
}

/* Connections using SVG overlay */
.neural-network svg.connections {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
    pointer-events: none;
}

.neural-network .connection-line {
    stroke: var(--accent-primary);
    stroke-width: 2;
    opacity: 0.5;
    stroke-dasharray: 6 6;
    animation: dashmove 2.5s linear infinite;
}

@keyframes dashmove {
    to {
        stroke-dashoffset: -24;
    }
}

/* Responsive for smaller screens */
@media (max-width: 600px) {
    .neural-network {
        width: 220px;
        height: 180px;
    }

    .node {
        width: 14px;
        height: 14px;
        margin: 8px 0;
    }
}

.scroll-indicator {
    position: absolute;
    bottom: 30px;
    left: 50%;
    transform: translateX(-50%);
}

.scroll-arrow {
    width: 2px;
    height: 30px;
    background: var(--accent-primary);
    position: relative;
    animation: scrollBounce 2s infinite;
}

.scroll-arrow::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: -4px;
    width: 0;
    height: 0;
    border-left: 5px solid transparent;
    border-right: 5px solid transparent;
    border-top: 8px solid var(--accent-primary);
}